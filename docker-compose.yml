services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - cdc-bp

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9101:9101"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS:  PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092  #
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_AUTOCREATE_TOPICS_ENABLE: "true"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: echo "describe topics" | nc kafka 9092 || exit 1
      start_period: 15s
      interval: 5s
      timeout: 15s
      retries: 6
    networks:
      - cdc-bp

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.0
    container_name: control-center
    hostname: control-center
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:29092
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION_FACTOR: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONFLUENT_METRICS_ENABLED: "false"
      PORT: 9021
    healthcheck:
      test:  ["CMD-SHELL", "curl -f http://localhost:9021 || exit 1"]
      start_period: 60s
      interval: 15s
      timeout: 10s
      retries: 6
    networks:
      - cdc-bp
    
  debezium:
    image: debezium/connect:2.1
    container_name: debezium
    hostname: debezium
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
      control-center:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: debezium
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_config
      STATUS_STORAGE_TOPIC: debezium_status
      OFFSET_STORAGE_TOPIC: debezium_offset
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      ENABLE_DEBEZIUM_SCRIPTING: "true"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083 || exit 1"]
      start_period: 15s
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - cdc-bp

  debezium-ui:
    image: debezium/debezium-ui:latest
    container_name: debezium-ui
    hostname: debezium-ui
    restart: always
    depends_on:
      debezium:
        condition: service_healthy
    ports:
      - "8081:8080"
    environment:
      DEBEZIUM_CONNECT_URL: http://debezium:8083
      DEBEZIUM_UI_PORT: 8080
      DEBEZIUM_UI_HOST: debezium-ui
      DEBEZIUM_UI_API_URL: http://debezium-ui:8080/api/v1
      KAFKA_CONNECT_URIS: http://debezium:8083
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      start_period: 15s
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - cdc-bp

  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    restart: always
    ports:
      - "5433:5432"  # 
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fin_db
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: trust
    command: ["postgres", "-c", "wal_level=logical"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - cdc-bp

networks:
  cdc-bp:
    name: cdc-bp
    driver: bridge
